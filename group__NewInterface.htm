<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>sleepd: New interface</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">sleepd
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__NewInterface.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">New interface<div class="ingroups"><a class="el" href="group__RTCAlarms.htm">RTC alarms</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>New interface for RTC alarms using SQLite.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for New interface:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__NewInterface.svg" width="267" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga1ddb2b5dfb983b001141d083a70afdf8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga1ddb2b5dfb983b001141d083a70afdf8">smart_sql_exec</a> (sqlite3 *db, const char *cmd)</td></tr>
<tr class="separator:ga1ddb2b5dfb983b001141d083a70afdf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef860d0ea5aeeb9c5093041da1626e46"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#gaef860d0ea5aeeb9c5093041da1626e46">smart_sql_open</a> (const char *path, sqlite3 **ret_db)</td></tr>
<tr class="separator:gaef860d0ea5aeeb9c5093041da1626e46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabaa2eb71b81955f3112ca30ed45eb28d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#gabaa2eb71b81955f3112ca30ed45eb28d">smart_sql_close</a> (sqlite3 *db)</td></tr>
<tr class="separator:gabaa2eb71b81955f3112ca30ed45eb28d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf16d7da6722027c92e7cf8dd730952a1"><td class="memItemLeft" align="right" valign="top">time_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#gaf16d7da6722027c92e7cf8dd730952a1">rtc_wall_time</a> (void)</td></tr>
<tr class="memdesc:gaf16d7da6722027c92e7cf8dd730952a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Last wall time.  <a href="#gaf16d7da6722027c92e7cf8dd730952a1">More...</a><br/></td></tr>
<tr class="separator:gaf16d7da6722027c92e7cf8dd730952a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa7cc2cf8a127bb2e3f5dadea137e1221"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#gaa7cc2cf8a127bb2e3f5dadea137e1221">wall_rtc_diff</a> (time_t *ret_delta)</td></tr>
<tr class="memdesc:gaa7cc2cf8a127bb2e3f5dadea137e1221"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the time difference between RTC time and wall time.  <a href="#gaa7cc2cf8a127bb2e3f5dadea137e1221">More...</a><br/></td></tr>
<tr class="separator:gaa7cc2cf8a127bb2e3f5dadea137e1221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga31cb4f95134dc8f4402aaaa97c92487d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga31cb4f95134dc8f4402aaaa97c92487d">_update_timeouts</a> (void)</td></tr>
<tr class="memdesc:ga31cb4f95134dc8f4402aaaa97c92487d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Trigger expired timeouts, and queue up the next one.  <a href="#ga31cb4f95134dc8f4402aaaa97c92487d">More...</a><br/></td></tr>
<tr class="separator:ga31cb4f95134dc8f4402aaaa97c92487d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5a8a28df92e930d63e69ccf00efe0bb3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga5a8a28df92e930d63e69ccf00efe0bb3">_sql_step_finalize</a> (const char *func, sqlite3_stmt *st)</td></tr>
<tr class="separator:ga5a8a28df92e930d63e69ccf00efe0bb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac73fb90a2a5e58780b213fd08b8167cb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#gac73fb90a2a5e58780b213fd08b8167cb">timeout_get_next_wakeup</a> (time_t *expiry, gchar **app_id, gchar **key)</td></tr>
<tr class="separator:gac73fb90a2a5e58780b213fd08b8167cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a83af0800113d06e2a3b317d4ff0bf2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga3a83af0800113d06e2a3b317d4ff0bf2">_queue_next_timeout</a> (bool set_callback_fn)</td></tr>
<tr class="memdesc:ga3a83af0800113d06e2a3b317d4ff0bf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queues both a RTC alarm for wakeup timeouts and a timer for non-wakeup timeouts.  <a href="#ga3a83af0800113d06e2a3b317d4ff0bf2">More...</a><br/></td></tr>
<tr class="separator:ga3a83af0800113d06e2a3b317d4ff0bf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga320c544646f437a8c89ffab1496f6309"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga320c544646f437a8c89ffab1496f6309">_timeout_create</a> (<a class="el" href="struct__AlarmTimeout.htm">_AlarmTimeout</a> *timeout, const char *app_id, const char *key, const char *uri, const char *params, bool public_bus, bool wakeup, const char *activity_id, int activity_duration_ms, bool calendar, time_t expiry)</td></tr>
<tr class="separator:ga320c544646f437a8c89ffab1496f6309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6fadd1ef010bdf265752718648d432fe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga6fadd1ef010bdf265752718648d432fe">_timeout_set</a> (<a class="el" href="struct__AlarmTimeout.htm">_AlarmTimeout</a> *timeout)</td></tr>
<tr class="separator:ga6fadd1ef010bdf265752718648d432fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c4d637bfd819a1c876d27afb602128f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga3c4d637bfd819a1c876d27afb602128f">_free_timeout_fields</a> (<a class="el" href="struct__AlarmTimeoutNonConst.htm">_AlarmTimeoutNonConst</a> *timeout)</td></tr>
<tr class="separator:ga3c4d637bfd819a1c876d27afb602128f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d14a1a30f1dc11d19e5b1bd972e103a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga2d14a1a30f1dc11d19e5b1bd972e103a">_timeout_read</a> (<a class="el" href="struct__AlarmTimeoutNonConst.htm">_AlarmTimeoutNonConst</a> *timeout, const char *app_id, const char *key, bool public_bus)</td></tr>
<tr class="memdesc:ga2d14a1a30f1dc11d19e5b1bd972e103a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read an existing timeout from the database.  <a href="#ga2d14a1a30f1dc11d19e5b1bd972e103a">More...</a><br/></td></tr>
<tr class="separator:ga2d14a1a30f1dc11d19e5b1bd972e103a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf05c1b008bc7bb04c6451b68c2add104"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#gaf05c1b008bc7bb04c6451b68c2add104">_timeout_delete</a> (const char *app_id, const char *key, bool public_bus)</td></tr>
<tr class="memdesc:gaf05c1b008bc7bb04c6451b68c2add104"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete an existing timeout.  <a href="#gaf05c1b008bc7bb04c6451b68c2add104">More...</a><br/></td></tr>
<tr class="separator:gaf05c1b008bc7bb04c6451b68c2add104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01e6ba8a80e85019ab75511da561fa91"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#ga01e6ba8a80e85019ab75511da561fa91">_timeout_clear</a> (const char *app_id, const char *key, bool public_bus)</td></tr>
<tr class="memdesc:ga01e6ba8a80e85019ab75511da561fa91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear an existing timeout &amp; reschedule the next.  <a href="#ga01e6ba8a80e85019ab75511da561fa91">More...</a><br/></td></tr>
<tr class="separator:ga01e6ba8a80e85019ab75511da561fa91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc252e59c9f50ab9777c6076c349dd65"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__NewInterface.htm#gabc252e59c9f50ab9777c6076c349dd65">INIT_FUNC</a> (<a class="el" href="init_8h.htm#abc6126af1d45847bc59afa0aa3216b04ae9e798943f72a6bda468768d745f7056">INIT_FUNC_END</a>, _alarms_timeout_init)</td></tr>
<tr class="separator:gabc252e59c9f50ab9777c6076c349dd65"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>New interface for RTC alarms using SQLite. </p>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga3c4d637bfd819a1c876d27afb602128f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _free_timeout_fields </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__AlarmTimeoutNonConst.htm">_AlarmTimeoutNonConst</a> *&#160;</td>
          <td class="paramname"><em>timeout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga3a83af0800113d06e2a3b317d4ff0bf2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _queue_next_timeout </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>set_callback_fn</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queues both a RTC alarm for wakeup timeouts and a timer for non-wakeup timeouts. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">set_callback_fn</td><td>If set_callback_fn is set to true, the callback function _rtc_alarm_fired will be triggered as soon as the alarm is fired. It will be set to true as long as device is awake, and will be set to false when the device suspends.</td></tr>
  </table>
  </dd>
</dl>
<p>The non-wakeup timeout timer is necessary so that these timeouts do not wake the device when they fire. Case 1: non-wakeup timeout expires when device is awake (trivial). Case 2: non-wakeup timeout expires when device is asleep. On resume, we will check to see if any alarms are expired and fire them. </p>

</div>
</div>
<a class="anchor" id="ga5a8a28df92e930d63e69ccf00efe0bb3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _sql_step_finalize </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sqlite3_stmt *&#160;</td>
          <td class="paramname"><em>st</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga01e6ba8a80e85019ab75511da561fa91"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _timeout_clear </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>app_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>public_bus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear an existing timeout &amp; reschedule the next. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">app_id</td><td></td></tr>
    <tr><td class="paramname">key</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga320c544646f437a8c89ffab1496f6309"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _timeout_create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__AlarmTimeout.htm">_AlarmTimeout</a> *&#160;</td>
          <td class="paramname"><em>timeout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>app_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>uri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>public_bus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>wakeup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>activity_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>activity_duration_ms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>calendar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">time_t&#160;</td>
          <td class="paramname"><em>expiry</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gaf05c1b008bc7bb04c6451b68c2add104"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _timeout_delete </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>app_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>public_bus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Delete an existing timeout. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">app_id</td><td></td></tr>
    <tr><td class="paramname">key</td><td></td></tr>
    <tr><td class="paramname">public_bus</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname"></td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2d14a1a30f1dc11d19e5b1bd972e103a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _timeout_read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__AlarmTimeoutNonConst.htm">_AlarmTimeoutNonConst</a> *&#160;</td>
          <td class="paramname"><em>timeout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>app_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>public_bus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read an existing timeout from the database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">timeout</td><td></td></tr>
    <tr><td class="paramname">app_id</td><td></td></tr>
    <tr><td class="paramname">key</td><td></td></tr>
    <tr><td class="paramname">public_bus</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>if at least one row matched</td></tr>
  </table>
  </dd>
</dl>
<p>Call <a class="el" href="group__NewInterface.htm#ga3c4d637bfd819a1c876d27afb602128f">_free_timeout_fields()</a> with the timeout when done. </p>

</div>
</div>
<a class="anchor" id="ga6fadd1ef010bdf265752718648d432fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool _timeout_set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__AlarmTimeout.htm">_AlarmTimeout</a> *&#160;</td>
          <td class="paramname"><em>timeout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga31cb4f95134dc8f4402aaaa97c92487d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _update_timeouts </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Trigger expired timeouts, and queue up the next one. </p>

</div>
</div>
<a class="anchor" id="gabc252e59c9f50ab9777c6076c349dd65"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">INIT_FUNC </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="init_8h.htm#abc6126af1d45847bc59afa0aa3216b04ae9e798943f72a6bda468768d745f7056">INIT_FUNC_END</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_alarms_timeout_init&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gaf16d7da6722027c92e7cf8dd730952a1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">time_t rtc_wall_time </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Last wall time. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname"></td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gabaa2eb71b81955f3112ca30ed45eb28d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void smart_sql_close </td>
          <td>(</td>
          <td class="paramtype">sqlite3 *&#160;</td>
          <td class="paramname"><em>db</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ga1ddb2b5dfb983b001141d083a70afdf8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool smart_sql_exec </td>
          <td>(</td>
          <td class="paramtype">sqlite3 *&#160;</td>
          <td class="paramname"><em>db</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>cmd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gaef860d0ea5aeeb9c5093041da1626e46"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool smart_sql_open </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sqlite3 **&#160;</td>
          <td class="paramname"><em>ret_db</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gac73fb90a2a5e58780b213fd08b8167cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool timeout_get_next_wakeup </td>
          <td>(</td>
          <td class="paramtype">time_t *&#160;</td>
          <td class="paramname"><em>expiry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gchar **&#160;</td>
          <td class="paramname"><em>app_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gchar **&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="gaa7cc2cf8a127bb2e3f5dadea137e1221"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wall_rtc_diff </td>
          <td>(</td>
          <td class="paramtype">time_t *&#160;</td>
          <td class="paramname"><em>ret_delta</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the time difference between RTC time and wall time. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Sat Jun 22 2013 23:26:32 for sleepd by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
